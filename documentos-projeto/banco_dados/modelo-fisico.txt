DROP TABLE IF EXISTS tb_kits_produtos;
DROP TABLE IF EXISTS tb_compras_prod;
DROP TABLE IF EXISTS tb_compras;
DROP TABLE IF EXISTS tb_kits;
DROP TABLE IF EXISTS tb_produtos;
DROP TABLE IF EXISTS tb_categorias;
DROP TABLE IF EXISTS tb_subcategorias;
DROP TABLE IF EXISTS tb_usuarios;
DROP TABLE IF EXISTS tb_cidades;

CREATE TABLE IF NOT EXISTS tb_cidades (
   id INT PRIMARY KEY AUTO_INCREMENT,
   nome VARCHAR(50) NOT NULL,
   estado VARCHAR(2) CHECK (estado IN ('AC','AL','AP','AM','BA','CE','DF','ES','GO','MA','MT','MS','MG','PA','PB','PR','PE','PI','RR','RO','RJ','RN','RS','SC','SP','SE','TO'))
);

CREATE TABLE IF NOT EXISTS tb_usuarios (
   cod_usuario INT PRIMARY KEY AUTO_INCREMENT,
   nome_usuario VARCHAR(70) NOT NULL,
   sobrenome VARCHAR(70) NOT NULL,
   cpf BIGINT(11) ZEROFILL NOT NULL UNIQUE,
   data_nasc DATE,
   telefone_usuario BIGINT NOT NULL,
   email_usuario VARCHAR(80) NOT NULL UNIQUE,
   senha VARCHAR(255) NOT NULL,
   ativo CHAR(1) DEFAULT 'S' CHECK(ativo IN ('S', 'N')),
   cep INT(8),
   complemento VARCHAR(20) NOT NULL,
   rua VARCHAR(50) NOT NULL,
   bairro VARCHAR(50) NOT NULL,
   numero_casa INT NOT NULL,
   tipo_cadastro CHAR(1) DEFAULT 'C' CHECK(tipo_cadastro IN ("C", "A")),
   codcid_fk INT,
   CONSTRAINT u_person UNIQUE(cpf, email_usuario),
   CONSTRAINT fk_cidade FOREIGN KEY (codcid_fk) REFERENCES tb_cidades(id)
    ON DELETE CASCADE
        ON UPDATE CASCADE

);

CREATE TABLE IF NOT EXISTS tb_categorias (
   cod_categoria INT PRIMARY KEY AUTO_INCREMENT,
   nome_categoria VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS tb_subcategorias (
   cod_subcategoria INT PRIMARY KEY AUTO_INCREMENT,
   nome_subcategoria VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS tb_produtos (
    cod_produto INT PRIMARY KEY AUTO_INCREMENT,
    nome_produto VARCHAR(50) NOT NULL,
    descricao_produto VARCHAR(100) NOT NULL,
    ativo CHAR(1) DEFAULT 'S' CHECK(ativo IN ('S', 'N')),
    preco_atual_produto FLOAT(6, 2) NOT NULL,
    id_categoria INT,
    id_subcategoria INT,
    imagem VARCHAR(255) NOT NULL,
    modelo_hardware VARCHAR(5) NOT NULL CHECK(modelo_hardware IN('INTEL', 'AMD', 'MISTO')),
    CONSTRAINT fk_idcategorias FOREIGN KEY (id_categoria) REFERENCES tb_categorias (cod_categoria)
        ON DELETE RESTRICT
            ON UPDATE RESTRICT,
    CONSTRAINT fk_idsubcategorias FOREIGN KEY (id_subcategoria) REFERENCES tb_subcategorias (cod_subcategoria)
        ON DELETE RESTRICT
            ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS tb_kits (
    cod_kit INT PRIMARY KEY AUTO_INCREMENT,
    nome_kit VARCHAR(50) NOT NULL,
    descricao_kit VARCHAR(100) NOT NULL
);

CREATE TABLE IF NOT EXISTS tb_compras (
    cod_compra INT PRIMARY KEY AUTO_INCREMENT,
    cod_transportadora INT NOT NULL,
    codusuario_fk INT,
    tipo_frete CHAR(1) NOT NULL CHECK(tipo_frete IN ('R', 'P', 'C', 'T')),
    data DATE NOT NULL,
    valor_entrega FLOAT(6, 2) NOT NULL,
    tipo_pagamento CHAR(1) CHECK(tipo_pagamento IN('D', 'P')),
    status VARCHAR(9) NOT NULL CHECK(status IN('APROVADO', 'REPROVADO', 'PENDENTE')),
    CONSTRAINT fk_codcliente FOREIGN KEY (codusuario_fk) REFERENCES tb_usuarios (cod_usuario)
      ON DELETE CASCADE
        ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS tb_compras_prod (
    cod_carrinho_itens INT PRIMARY KEY AUTO_INCREMENT,
    codproduto_fk INT,
    quantidade INT NOT NULL DEFAULT 1,
    valor_compra_produto FLOAT(6,2) NOT NULL,
    cod_compra_fk INT,
    CONSTRAINT codcompra_fk FOREIGN KEY(cod_compra_fk) REFERENCES tb_compras(cod_compra),
    CONSTRAINT codprodutos_fk FOREIGN KEY (codproduto_fk) REFERENCES tb_produtos (cod_produto)
        ON DELETE CASCADE
            ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS tb_kits_produtos (
    cod_kit_produto INT PRIMARY KEY AUTO_INCREMENT,
    cod_kit INT,
    cod_produto INT,
    quantidade INT NOT NULL,
    tipo_kit VARCHAR(5) CHECK(tipo_kit IN ("INTEL", "AMD")),
    CONSTRAINT fk_codkit FOREIGN KEY(cod_kit) REFERENCES tb_kits(cod_kit)
        ON DELETE CASCADE
            ON UPDATE CASCADE,
    CONSTRAINT fk_produtos FOREIGN KEY(cod_produto) REFERENCES tb_produtos(cod_produto)
        ON DELETE CASCADE
            ON UPDATE CASCADE
);
